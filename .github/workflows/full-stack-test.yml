name: Full Stack Test

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build 

      - name: Prepare frontend artifacts
        working-directory: ./frontend
        run: |
          tar -czvf ../frontend.tar.gz ./build
          ls -l

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend.tar.gz

      # Backend build
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore backend dependencies
        working-directory: ./backend/MyWebApp
        run: dotnet publish -c Release -o ./publish

      - name: Archive backend publish output
        working-directory: ./backend/MyWebApp
        run: |
          tar -czf ../backend.tar.gz ./publish
          ls -lh ../backend.tar.gz

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: backend.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444

    env:
      SELENIUM_HOST: http://localhost:4444/wd/hub
      FRONTEND_URL: http://localhost:3000
      BACKEND_URL: http://localhost:5000

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend
      
      - name: Extract frontend artifact
        run: |
          mkdir -p ./frontend/build
          tar -zxvf frontend.tar.gz -C ./frontend/build
          ls -l

      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend

      - name: Extract backend artifact
        run: |
          mkdir -p ./backend/publish
          tar -xzf backend.tar.gz -C ./backend/publish
          ls -l

      - name: Serve frontend
        run: |
          npm install -g serve
          nohup serve -s ./frontend/build -l 3000 &
          sleep 5

      - name: Run backend
        run: |
          nohup ./backend/publish/MyWebApp.dll --urls http://localhost:5000 &
          sleep 5

      - name: Run Selenium tests
        run: node ./frontend/selenium/login-test.js

services:
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"  # Required for certbot HTTP challenge
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot  # Certbot challenges directory
      - ./certbot/conf:/etc/letsencrypt  # SSL certs storage
      - ./frontend/build:/var/www/html/:ro
    networks:
      net_backend_nginx:
        ipv4_address: 10.0.0.2

  file_server:
    image: node:18-slim
    container_name: file_server
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./upload-server:/app
      - uploads-data:/uploads
    networks:
      net_backend_file:
        ipv4_address: 10.1.0.2
    command: >
      sh -c "
      npm init -y &&
      npm install express multer &&
      node upload-server.js
      "

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      net_backend_nginx:
        ipv4_address: 10.0.0.4
    entrypoint: sh -c "certbot certonly --webroot -w /var/www/certbot --email dev@ready4work.com --agree-tos --no-eff-email --rsa-key-size 4096 --expand --force-renewal -d ready4work.duckdns.org -d www.ready4work.duckdns.org"

  backend:
    image: backend-image:latest            # Use the same name as `docker build -t`
    container_name: backend-server
    restart: unless-stopped
    environment:
      - ConnectionStrings__DefaultConnection=server=database;port=3306;database=ready4work;user=dev;password=password
    networks:
      net_backend_nginx:
        ipv4_address: 10.0.0.3
      net_backend_file:
        ipv4_address: 10.1.0.3
      net_backend_mysql:
        ipv4_address: 10.2.0.3

  database:
    container_name: mysql_database
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: user_account
      MYSQL_USER: dev
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      net_backend_mysql:
        ipv4_address: 10.2.0.2

networks:
  net_backend_nginx:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/16
          gateway: 10.0.0.1
  net_backend_file:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/16
          gateway: 10.1.0.1
  net_backend_mysql:
    driver: bridge
    ipam:
      config:
        - subnet: 10.2.0.0/16
          gateway: 10.2.0.1

volumes:
  mysql_data:
  uploads-data: